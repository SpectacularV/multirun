name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
        include:
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            artifactName: windows-x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifactName: linux-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifactName: macos-universal
          
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        name: Checkout Repository

      - name: Build native binary
        run: |
          rustup target add ${{ matrix.target }}
          cargo build --release --target ${{ matrix.target }}

      - name: Build Aarch64 binary
        run: |
          rustup target add aarch64-apple-darwin
          cargo build --release --target aarch64-apple-darwin
        if: matrix.os == 'macOS-latest'

      - name: Create universal binary + place at x86 path
        run: |
          lipo target/x86_64-apple-darwin/release/multirun target/aarch64-apple-darwin/release/multirun -create -output ./multirun
          cp -f ./multirun target/x86_64-apple-darwin/release/multirun
        if: matrix.os == 'macOS-latest'

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v3
        with:
          name: multirun-${{ matrix.artifactName }}
          path: target/${{ matrix.target }}/release/multirun
